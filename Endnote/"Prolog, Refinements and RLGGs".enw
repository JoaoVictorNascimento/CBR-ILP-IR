%0 Conference Proceedings
%T Prolog, refinements and RLGG's
%A Sammut, Claude
%Y Page, David
%S Inductive Logic Programming
%D 1998
%I Springer Berlin Heidelberg
%C Berlin, Heidelberg
%@ 978-3-540-69059-7
%F 10.1007/BFb0027326
%X Cohen's [1] refinement rules provide a flexible mechanism for introducing intentional background knowledge in an ILP system. Whereas Cohen used a limited second order theorem prover to imple- ment the rule interpreter, we extend the method to use a full Prolog interpreter. This makes the introduction of more complex background knowledge possible. Although refinement rules have been used to gener- ate literals for a general-to-specific search, we show how they can also be used as filters to reduce the number of literals in an RLGG algorithm. Each literal constructed by the LGG is tested against the refinement rules and only admitted if a refinement rule has been satisfied.
%P 225-234

